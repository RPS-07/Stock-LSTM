# -*- coding: utf-8 -*-
"""ForecastingwithRandomForest&XGBoost.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ABBHHMyGEoj6MaJD7rGop9beXwycGLG3
"""

import pandas as pd
import numpy as np
from google.colab import files
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

uploaded = files.upload()

data = pd.read_csv("CryptoData.csv")

data.head()

features = data[["open","high","low","close","Volume XRP"]]
target = data["close"]

X_train, X_test, y_train, y_test = train_test_split(features,target, test_size=0.2, random_state=42)

# Random Forest Algorithm
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# XGBoost Algorithm
xgb_model = xgb.XGBRegressor(n_estimators=100, random_state=42)
xgb_model.fit(X_train, y_train)

last_data = data.iloc[-1][["open","high","low","close","Volume XRP"]].values.reshape(1,-1)
prediction_rf = rf_model.predict(last_data)
prediction_xgb = xgb_model.predict(last_data)
average_prediction = (prediction_rf + prediction_xgb)/2

print("Forcasted Price:")
print(average_prediction)

rf_feature_importance = rf_model.feature_importances_
xgb_feature_importance = xgb_model.feature_importances_
print(rf_feature_importance)
print(xgb_feature_importance)